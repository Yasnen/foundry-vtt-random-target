name: Release

on:
  push:
    branches:
      - master

jobs:
  versioning:
    name: Versioning
    runs-on: ubuntu-latest
    outputs:
      new_tag: ${{ steps.bump.outputs.new_tag }}
      release_type: ${{ steps.bump.outputs.release_type }}
      changelog: ${{ steps.bump.outputs.changelog }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # all commits

      - name: Bump and tag new version
        id: bump
        uses: mathieudutour/github-tag-action@v6.0
        with:
          github_token: ${{ secrets.GH_TOKEN }}
          default_bump: false

  release:
    if: |
      needs.versioning.outputs.new_tag &&
      !startsWith(needs.versioning.outputs.release_type, 'pre')
    name: Release
    runs-on: ubuntu-latest
    needs:
      - versioning
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install node
        uses: actions/setup-node@v2
        with:
          node-version: '16.x'

      - name: 'Install dependencies'
        shell: 'bash'
        run: |
          yarn install --prefer-offline --frozen-lockfile

      - name: 'Build'
        shell: 'bash'
        run: |
          gulp build --release=${{ needs.versioning.outputs.new_tag }}

      - name: Create zip
        run: |
          cd dist/
          zip -r ../foundry-vtt-random-target_${{ needs.versioning.outputs.new_tag }}.zip *

      - name: Create release
        uses: ncipollo/release-action@v1.9.0
        with:
          token: ${{ secrets.GH_TOKEN }}
          tag: ${{ needs.versioning.outputs.new_tag }}
          artifacts: './dist/module.json,foundry-vtt-random-target_${{ needs.versioning.outputs.new_tag }}.zip'
          body: ${{ needs.versioning.outputs.changelog }}
